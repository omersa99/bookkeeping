/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  IsOptional,
  ValidateNested,
  IsDate,
  IsEnum,
} from "class-validator";
import { Account } from "../../account/base/Account";
import { Type } from "class-transformer";
import { Customer } from "../../customer/base/Customer";
import { EnumInvoiceModelInvoiceStatus } from "./EnumInvoiceModelInvoiceStatus";
import { ItemTransaction } from "../../itemTransaction/base/ItemTransaction";
import { Ledger } from "../../ledger/base/Ledger";

@ObjectType()
class InvoiceModel {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  amountDue!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  amountPaid!: string | null;

  @ApiProperty({
    required: false,
    type: () => Account,
  })
  @ValidateNested()
  @Type(() => Account)
  @IsOptional()
  cashAccount?: Account | null;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: false,
    type: () => Customer,
  })
  @ValidateNested()
  @Type(() => Customer)
  @IsOptional()
  customer?: Customer | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  info!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  invoiceNumber!: string | null;

  @ApiProperty({
    required: false,
    enum: EnumInvoiceModelInvoiceStatus,
  })
  @IsEnum(EnumInvoiceModelInvoiceStatus)
  @IsOptional()
  @Field(() => EnumInvoiceModelInvoiceStatus, {
    nullable: true,
  })
  invoiceStatus?: "Draft" | "Paid" | "Canceled" | null;

  @ApiProperty({
    required: false,
    type: () => ItemTransaction,
  })
  @ValidateNested()
  @Type(() => ItemTransaction)
  @IsOptional()
  itemTransactions?: ItemTransaction | null;

  @ApiProperty({
    required: false,
    type: () => Ledger,
  })
  @ValidateNested()
  @Type(() => Ledger)
  @IsOptional()
  ledger?: Ledger | null;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;
}

export { InvoiceModel as InvoiceModel };
