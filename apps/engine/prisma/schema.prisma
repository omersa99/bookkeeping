datasource postgres {
  provider = "postgresql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  createdAt  DateTime @default(now())
  entities   Entity?  @relation(fields: [entitiesId], references: [id])
  entitiesId String?  @unique
  firstName  String?
  id         String   @id @default(cuid())
  lastName   String?
  password   String
  roles      Json
  updatedAt  DateTime @updatedAt
  username   String   @unique
}

model Transaction {
  account   Account? @relation(fields: [accountId], references: [id])
  accountId String?
  amount    String?
  createdAt DateTime @default(now())
  id        String   @id @default(cuid())
  journal   Journal? @relation(fields: [journalId], references: [id])
  journalId String?
  trxType   String?
  updatedAt DateTime @updatedAt
}

model Journal {
  createdAt    DateTime      @default(now())
  entity       Entity?       @relation(fields: [entityId], references: [id])
  entityId     String?
  id           String        @id @default(cuid())
  ledger       Ledger?       @relation(fields: [ledgerId], references: [id])
  ledgerId     String?
  transactions Transaction[]
  updatedAt    DateTime      @updatedAt
}

model Ledger {
  createdAt     DateTime      @default(now())
  entity        Entity?       @relation(fields: [entityId], references: [id])
  entityId      String?
  id            String        @id @default(cuid())
  invoiceModels InvoiceModel?
  journals      Journal[]
  name          String?
  updatedAt     DateTime      @updatedAt
}

model Account {
  balanceType    String?
  chartOfAccount ChartOfAccount[]
  code           String?
  createdAt      DateTime         @default(now())
  id             String           @id @default(cuid())
  invoiceModels  InvoiceModel[]
  name           String?
  role           String?
  transactions   Transaction[]
  updatedAt      DateTime         @updatedAt
}

model Entity {
  coa              ChartOfAccount?   @relation(fields: [coaID], references: [id])
  coaID            String?           @unique
  createdAt        DateTime          @default(now())
  customers        Customer[]
  id               String            @id @default(cuid())
  items            Item?
  itemTransactions ItemTransaction[]
  journals         Journal[]
  ledgers          Ledger[]
  name             String?
  updatedAt        DateTime          @updatedAt
  user             User?
}

model ChartOfAccount {
  accounts  Account[]
  createdAt DateTime  @default(now())
  entitie   Entity?
  id        String    @id @default(cuid())
  updatedAt DateTime  @updatedAt
}

model Item {
  cogsAccount      String?
  createdAt        DateTime          @default(now())
  earningsAccount  String?
  entity           Entity?           @relation(fields: [entityId], references: [id])
  entityId         String?           @unique
  id               String            @id @default(cuid())
  inventoryAccount String?
  itemTransactions ItemTransaction[]
  name             String?
  updatedAt        DateTime          @updatedAt
}

model InvoiceModel {
  amountDue          String?
  amountPaid         String?
  cashAccount        Account?                       @relation(fields: [cashAccountId], references: [id])
  cashAccountId      String?
  createdAt          DateTime                       @default(now())
  customer           Customer?                      @relation(fields: [customerId], references: [id])
  customerId         String?
  id                 String                         @id @default(cuid())
  info               String?
  invoiceNumber      String?
  invoiceStatus      EnumInvoiceModelInvoiceStatus?
  itemTransactions   ItemTransaction?               @relation(fields: [itemTransactionsId], references: [id])
  itemTransactionsId String?                        @unique
  ledger             Ledger?                        @relation(fields: [ledgerId], references: [id])
  ledgerId           String?                        @unique
  updatedAt          DateTime                       @updatedAt
}

model ItemTransaction {
  createdAt    DateTime      @default(now())
  entity       Entity?       @relation(fields: [entityId], references: [id])
  entityId     String?
  id           String        @id @default(cuid())
  invoiceModel InvoiceModel?
  item         Item?         @relation(fields: [itemId], references: [id])
  itemId       String?
  quantity     Int?
  totalAmount  String?
  unitCost     String?
  updatedAt    DateTime      @updatedAt
}

model Customer {
  active        Boolean?
  createdAt     DateTime       @default(now())
  entity        Entity?        @relation(fields: [entityId], references: [id])
  entityId      String?
  id            String         @id @default(cuid())
  invoiceModels InvoiceModel[]
  name          String?
  salesTaxRate  Float?
  updatedAt     DateTime       @updatedAt
}

enum EnumInvoiceModelInvoiceStatus {
  Draft
  Paid
  Canceled
}
