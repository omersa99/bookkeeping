datasource postgres {
  provider = "postgresql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  createdAt DateTime @default(now())
  entity    Entity?  @relation(fields: [entityId], references: [id])
  entityId  String?
  firstName String?
  id        String   @id @default(cuid())
  lastName  String?
  password  String
  roles     Json
  updatedAt DateTime @updatedAt
  username  String   @unique
}

model Entity {
  accrualMethod Boolean?
  createdAt     DateTime   @default(now())
  customers     Customer[]
  id            String     @id @default(cuid())
  info          Json?
  items         Item[]
  ledgers       Ledger[]
  name          String?
  updatedAt     DateTime   @updatedAt
  users         User[]
}

model Ledger {
  createdAt DateTime  @default(now())
  entity    Entity?   @relation(fields: [entityId], references: [id])
  entityId  String?
  id        String    @id @default(cuid())
  journals  Journal[]
  name      String?
  updatedAt DateTime  @updatedAt
}

model Journal {
  createdAt    DateTime      @default(now())
  id           String        @id @default(cuid())
  ledger       Ledger?       @relation(fields: [ledgerId], references: [id])
  ledgerId     String?
  transactions Transaction[]
  updatedAt    DateTime      @updatedAt
}

model Item {
  createdAt DateTime @default(now())
  entity    Entity?  @relation(fields: [entityId], references: [id])
  entityId  String?
  id        String   @id @default(cuid())
  itemRole EnumItemItemRole? @determines whether the ItemModel should be treated as an expense, inventory, service or product.
  name      String?
  updatedAt DateTime @updatedAt
}

model Transaction {
  createdAt DateTime @default(now())
  id        String   @id @default(cuid())
  journal   Journal? @relation(fields: [journalId], references: [id])
  journalId String?
  updatedAt DateTime @updatedAt
}

model Account {
  balanceType EnumAccountBalanceType?
  code        String?
  createdAt   DateTime                @default(now())
  id          String                  @id @default(cuid())
  name        String?
  role        String?
  updatedAt   DateTime                @updatedAt
}

model Customer {
  createdAt    DateTime @default(now())
  customerName String?
  entity       Entity?  @relation(fields: [entityId], references: [id])
  entityId     String?
  id           String   @id @default(cuid())
  info         Json?
  updatedAt    DateTime @updatedAt
}

enum EnumItemItemRole {
  Expense
  Inventory
  Service
  Product
}

enum EnumAccountBalanceType {
  Debit
  Credit
}
