/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  IsOptional,
  IsDate,
  ValidateNested,
  IsBoolean,
  IsEnum,
} from "class-validator";
import { Type } from "class-transformer";
import { Entity } from "../../entity/base/Entity";
import { EnumItemItemRole } from "./EnumItemItemRole";
import { EnumItemItemType } from "./EnumItemItemType";

@ObjectType()
class Item {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  Amount!: string | null;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: false,
    type: () => Entity,
  })
  @ValidateNested()
  @Type(() => Entity)
  @IsOptional()
  entity?: Entity | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  isProductOrService!: boolean | null;

  @ApiProperty({
    required: false,
    enum: EnumItemItemRole,
  })
  @IsEnum(EnumItemItemRole)
  @IsOptional()
  @Field(() => EnumItemItemRole, {
    nullable: true,
  })
  itemRole?: "Expense" | "Inventory" | "Service" | "Product" | null;

  @ApiProperty({
    required: false,
    enum: EnumItemItemType,
  })
  @IsEnum(EnumItemItemType)
  @IsOptional()
  @Field(() => EnumItemItemType, {
    nullable: true,
  })
  itemType?: "Labor" | "Material" | "LumpSum" | "Equipment" | "Other" | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name!: string | null;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;
}

export { Item as Item };
