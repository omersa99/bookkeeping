/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsBoolean,
  IsOptional,
  IsString,
  IsEnum,
  ValidateNested,
} from "class-validator";
import { EnumAccountDefaultAccountType } from "./EnumAccountDefaultAccountType";
import { ItemUpdateManyWithoutAccountsInput } from "./ItemUpdateManyWithoutAccountsInput";
import { Type } from "class-transformer";
import { TransactionUpdateManyWithoutAccountsInput } from "./TransactionUpdateManyWithoutAccountsInput";

@InputType()
class AccountUpdateInput {
  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  active?: boolean | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  code?: string | null;

  @ApiProperty({
    required: false,
    enum: EnumAccountDefaultAccountType,
  })
  @IsEnum(EnumAccountDefaultAccountType)
  @IsOptional()
  @Field(() => EnumAccountDefaultAccountType, {
    nullable: true,
  })
  DefaultAccountType?: "Debit" | "Credit" | null;

  @ApiProperty({
    required: false,
    type: () => ItemUpdateManyWithoutAccountsInput,
  })
  @ValidateNested()
  @Type(() => ItemUpdateManyWithoutAccountsInput)
  @IsOptional()
  @Field(() => ItemUpdateManyWithoutAccountsInput, {
    nullable: true,
  })
  items?: ItemUpdateManyWithoutAccountsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  role?: string | null;

  @ApiProperty({
    required: false,
    type: () => TransactionUpdateManyWithoutAccountsInput,
  })
  @ValidateNested()
  @Type(() => TransactionUpdateManyWithoutAccountsInput)
  @IsOptional()
  @Field(() => TransactionUpdateManyWithoutAccountsInput, {
    nullable: true,
  })
  transactions?: TransactionUpdateManyWithoutAccountsInput;
}

export { AccountUpdateInput as AccountUpdateInput };
