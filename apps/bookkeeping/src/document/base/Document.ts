/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  IsOptional,
  ValidateNested,
  IsDate,
  IsEnum,
} from "class-validator";
import { Client } from "../../client/base/Client";
import { Type } from "class-transformer";
import { EnumDocumentDocType } from "./EnumDocumentDocType";
import { Item } from "../../item/base/Item";
import { EnumDocumentStatus } from "./EnumDocumentStatus";
import { Supplier } from "../../supplier/base/Supplier";

@ObjectType()
class Document {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  cashAccount!: string | null;

  @ApiProperty({
    required: false,
    type: () => Client,
  })
  @ValidateNested()
  @Type(() => Client)
  @IsOptional()
  Client?: Client | null;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: false,
    enum: EnumDocumentDocType,
  })
  @IsEnum(EnumDocumentDocType)
  @IsOptional()
  @Field(() => EnumDocumentDocType, {
    nullable: true,
  })
  docType?: "Invoice" | "Receipt" | "Bill" | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  dueDate!: Date | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: false,
    type: () => [Item],
  })
  @ValidateNested()
  @Type(() => Item)
  @IsOptional()
  items?: Array<Item>;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  prepaidAccount!: string | null;

  @ApiProperty({
    required: false,
    enum: EnumDocumentStatus,
  })
  @IsEnum(EnumDocumentStatus)
  @IsOptional()
  @Field(() => EnumDocumentStatus, {
    nullable: true,
  })
  status?: "Draft" | "Approved" | "Paid" | "Canceled" | null;

  @ApiProperty({
    required: false,
    type: () => Supplier,
  })
  @ValidateNested()
  @Type(() => Supplier)
  @IsOptional()
  supplier?: Supplier | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  unearnedAccount!: string | null;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;
}

export { Document as Document };
